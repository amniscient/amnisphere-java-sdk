/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.amniscient.api.types;

import com.amniscient.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = DetectResponse.Builder.class)
public final class DetectResponse {
    private final Optional<String> status;

    private final Optional<List<Object>> detections;

    private final Map<String, Object> additionalProperties;

    private DetectResponse(
            Optional<String> status, Optional<List<Object>> detections, Map<String, Object> additionalProperties) {
        this.status = status;
        this.detections = detections;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A status code denoting success or failure.
     */
    @JsonProperty("status")
    public Optional<String> getStatus() {
        return status;
    }

    /**
     * @return The detections response includes 3 elements: the bbox array, a confidence value, and a class. The bbox array is an array of numbers describing the bounding box coordinates for your objects listed in order as [x1, y1, x2, y2]. The confidence score is a value between 0 and 1 rating how confident the object detection output is based on your model and the image provided. The class is the class name of the detected object.
     */
    @JsonProperty("detections")
    public Optional<List<Object>> getDetections() {
        return detections;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof DetectResponse && equalTo((DetectResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(DetectResponse other) {
        return status.equals(other.status) && detections.equals(other.detections);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.status, this.detections);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> status = Optional.empty();

        private Optional<List<Object>> detections = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(DetectResponse other) {
            status(other.getStatus());
            detections(other.getDetections());
            return this;
        }

        /**
         * <p>A status code denoting success or failure.</p>
         */
        @JsonSetter(value = "status", nulls = Nulls.SKIP)
        public Builder status(Optional<String> status) {
            this.status = status;
            return this;
        }

        public Builder status(String status) {
            this.status = Optional.ofNullable(status);
            return this;
        }

        /**
         * <p>The detections response includes 3 elements: the bbox array, a confidence value, and a class. The bbox array is an array of numbers describing the bounding box coordinates for your objects listed in order as [x1, y1, x2, y2]. The confidence score is a value between 0 and 1 rating how confident the object detection output is based on your model and the image provided. The class is the class name of the detected object.</p>
         */
        @JsonSetter(value = "detections", nulls = Nulls.SKIP)
        public Builder detections(Optional<List<Object>> detections) {
            this.detections = detections;
            return this;
        }

        public Builder detections(List<Object> detections) {
            this.detections = Optional.ofNullable(detections);
            return this;
        }

        public DetectResponse build() {
            return new DetectResponse(status, detections, additionalProperties);
        }
    }
}
