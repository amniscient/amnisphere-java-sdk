/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.amniscient.api;

import com.amniscient.api.core.ClientOptions;
import com.amniscient.api.core.Environment;
import okhttp3.OkHttpClient;

public final class AmniscientApiClientBuilder {
    private ClientOptions.Builder clientOptionsBuilder = ClientOptions.builder();

    private String apiKey = null;

    private Environment environment = Environment.DEFAULT;

    /**
     * Sets apiKey
     */
    public AmniscientApiClientBuilder apiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }

    public AmniscientApiClientBuilder environment(Environment environment) {
        this.environment = environment;
        return this;
    }

    public AmniscientApiClientBuilder url(String url) {
        this.environment = Environment.custom(url);
        return this;
    }

    /**
     * Sets the timeout (in seconds) for the client
     */
    public AmniscientApiClientBuilder timeout(int timeout) {
        this.clientOptionsBuilder.timeout(timeout);
        return this;
    }

    /**
     * Sets the underlying OkHttp client
     */
    public AmniscientApiClientBuilder httpClient(OkHttpClient httpClient) {
        this.clientOptionsBuilder.httpClient(httpClient);
        return this;
    }

    public AmniscientApiClient build() {
        if (apiKey == null) {
            throw new RuntimeException("Please provide apiKey");
        }
        this.clientOptionsBuilder.addHeader("x-api-key", this.apiKey);
        clientOptionsBuilder.environment(this.environment);
        return new AmniscientApiClient(clientOptionsBuilder.build());
    }
}
